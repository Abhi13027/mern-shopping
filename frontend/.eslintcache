[{"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/components/Footer.js":"1","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Order.js":"2","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/index.js":"3","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Cart.js":"4","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Register.js":"5","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Shipping.js":"6","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/PlaceOrder.js":"7","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Product.js":"8","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/reducers/orderReducers.js":"9","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/reportWebVitals.js":"10","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/reducers/userReducers.js":"11","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Home.js":"12","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/actions/orderActions.js":"13","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Login.js":"14","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/components/Header.js":"15"},{"size":323,"mtime":1609380461194,"results":"16","hashOfConfig":"17"},{"size":6275,"mtime":1621316243785,"results":"18","hashOfConfig":"17"},{"size":597,"mtime":1609731899066,"results":"19","hashOfConfig":"17"},{"size":3533,"mtime":1609824049059,"results":"20","hashOfConfig":"17"},{"size":3141,"mtime":1621223740685,"results":"21","hashOfConfig":"17"},{"size":2545,"mtime":1621245327252,"results":"22","hashOfConfig":"17"},{"size":4987,"mtime":1621255215905,"results":"23","hashOfConfig":"17"},{"size":3829,"mtime":1609851354909,"results":"24","hashOfConfig":"17"},{"size":1656,"mtime":1621316168424,"results":"25","hashOfConfig":"17"},{"size":362,"mtime":1609379731791,"results":"26","hashOfConfig":"17"},{"size":1896,"mtime":1621260033696,"results":"27","hashOfConfig":"17"},{"size":1043,"mtime":1609734511074,"results":"28","hashOfConfig":"17"},{"size":2498,"mtime":1621317194479,"results":"29","hashOfConfig":"17"},{"size":2158,"mtime":1621220097184,"results":"30","hashOfConfig":"17"},{"size":1861,"mtime":1621219287173,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"brywp4",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/components/Footer.js",[],"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Order.js",["66"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { Link } from \"react-router-dom\";\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\nimport axios from \"axios\";\nimport { ORDER_PAY_RESET } from \"../constants/orderConstants\";\n\nconst Order = ({ match }) => {\n  const orderId = match.params.id;\n\n  const [SDKReady, setSDKReady] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  if (!loading) {\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSDKReady(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (!order || successPay) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSDKReady(true);\n      }\n    }\n  }, [order, orderId, dispatch, successPay]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  return loading ? (\n    <Loader></Loader>\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto:${order.user.email}`}>${order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\n                {order.shippingAddress.postalCode},{\" \"}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant=\"danger\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"danger\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message> Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          ></Image>\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader></Loader>}\n                  {!SDKReady ? (\n                    <Loader></Loader>\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    ></PayPalButton>\n                  )}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Order;\n",["67","68"],"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/index.js",[],"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Cart.js",[],"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Register.js",[],"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Shipping.js",["69"],"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/PlaceOrder.js",["70"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { Link } from \"react-router-dom\";\nimport { createOrder } from \"../actions/orderActions\";\n\nconst PlaceOrder = ({ history }) => {\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\n\n  cart.taxPrice = addDecimals(Number(0.15 * cart.itemsPrice).toFixed(2));\n\n  cart.totalPrice =\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice);\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n    // eslint-disable-next-line\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\n                {cart.shippingAddress.postalCode},{\" \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message> Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          ></Image>\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems.length === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrder;\n","/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Product.js",[],"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/reducers/orderReducers.js",[],"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/reportWebVitals.js",[],["71","72"],"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/reducers/userReducers.js",[],"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Home.js",[],"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/actions/orderActions.js",[],"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/pages/Login.js",[],"/Users/abhijain/Desktop/React/mern-shopping/frontend/src/components/Header.js",[],{"ruleId":"73","severity":1,"message":"74","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":16},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"73","severity":1,"message":"81","line":2,"column":24,"nodeType":"75","messageId":"76","endLine":2,"endColumn":35},{"ruleId":"73","severity":1,"message":"82","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"77","replacedBy":"83"},{"ruleId":"79","replacedBy":"84"},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'FormControl' is defined but never used.","'useState' is defined but never used.",["85"],["86"],"no-global-assign","no-unsafe-negation"]